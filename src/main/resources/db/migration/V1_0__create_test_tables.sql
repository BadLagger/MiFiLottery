-- Создаем таблицу Roles
CREATE TABLE IF NOT EXISTS Roles
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT
);

CREATE TABLE IF NOT EXISTS Users
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(255) NOT NULL,
    telegram VARCHAR(255) NOT NULL,
    balance BIGINT default 0,
    role_id BIGINT NOT NULL,
    FOREIGN KEY(role_id) REFERENCES Roles(id)
);

-- Создаем таблицу LotteryType
CREATE TABLE IF NOT EXISTS LotteryType (
                                           id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                           description TEXT NOT NULL,
                                           ticket_price DECIMAL(8, 2) NOT NULL CHECK(ticket_price > 0),
    min_ticket INTEGER NOT NULL CHECK(min_ticket >= 0),
    prize_pool_percentage DOUBLE PRECISION NOT NULL CHECK(prize_pool_percentage BETWEEN 0 AND 1)
    );

-- Для H2 тип ENUM реализуют как символьное поле с check constraint
CREATE TABLE IF NOT EXISTS Draw (
                                    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    name TEXT NOT NULL,
                                    lottery_type_id BIGINT NOT NULL,
                                    start_time TIMESTAMP NOT NULL,
                                    duration INTEGER NOT NULL,
                                    status VARCHAR(20) CHECK (status IN ('PLANNED', 'ACTIVE', 'COMPLETED', 'CANCELLED')),
    FOREIGN KEY(lottery_type_id) REFERENCES LotteryType(id)
    );

-- Таблица для результатов Тиража. Для БД H2 используем тип JSON, а для Postgres нужно будет использовать JSONB
CREATE TABLE IF NOT EXISTS DrawResult (
                                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          draw_id BIGINT NOT NULL,
                                          winning_combination JSON NOT NULL,
                                          winning_tickets JSON,
                                          result_time TIMESTAMP NOT NULL,
                                          prize_pool BIGINT NOT NULL,
                                          FOREIGN KEY(draw_id) REFERENCES Draw(id)
    );


CREATE TABLE IF NOT EXISTS Ticket
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    draw_id BIGINT NOT NULL,
    data JSON NOT NULL,
    status VARCHAR(20) CHECK (status IN ('INGAME', 'WIN', 'LOSE', 'CANCELLED')),
    FOREIGN KEY(user_id) REFERENCES Users(id),
    FOREIGN KEY(draw_id) REFERENCES Draw(id)
);
